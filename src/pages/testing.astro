---
// Fetch EPG data
const epgData = await fetch("http://localhost:4321/epg/all")
  .then((response) => response.json())
  .catch((error) => {
    console.error("Error fetching EPG data:", error);
    return { channels: [] };
  });

// Function to get current show
async function getCurrentShow(channelId) {
  try {
    // Find the channel in the EPG data
    const channel = epgData.channels.find((ch) => ch.id === channelId);

    if (!channel || !channel.epg || channel.epg.length === 0) {
      return null;
    }

    // Get current time in UTC
    const now = new Date();

    // Find the show that's currently playing
    const currentShow = channel.epg.find((show) => {
      const startTime = new Date(show.startTime);
      const endTime = new Date(show.endTime);

      return now >= startTime && now < endTime;
    });

    return currentShow || null;
  } catch (error) {
    console.error(
      `Error getting current show for channel ${channelId}:`,
      error
    );
    return null;
  }
}

// Get the current show for channel 2
const currentShow = await getCurrentShow(2);
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Current Show Test</title>
  </head>
  <body>
    <h1>Current Show</h1>

    {
      currentShow ? (
        <div>
          <h2>{currentShow.title}</h2>
          <p>
            Time: {new Date(currentShow.startTime).toLocaleTimeString()} -{" "}
            {new Date(currentShow.endTime).toLocaleTimeString()}
          </p>
          <p>{currentShow.description}</p>
        </div>
      ) : (
        <p>No show currently playing on channel 2</p>
      )
    }
  </body>
</html>
